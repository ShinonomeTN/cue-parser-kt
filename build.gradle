plugins {
    id 'java'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
}

ext {
    mavenUsername = project.findProperty("maven.username")
    mavenPassword = project.findProperty("maven.password")
}

group 'com.shinonometn'
version '3.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile 'junit:junit:4.13.2'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

def decideRepositorySet() {
    def releaseRepositories = [
            'github': [
                    release : "https://maven.pkg.github.com/shinonometn/maven-public",
                    snapshot: "https://maven.pkg.github.com/shinonometn/maven-public",
            ],
            'shinonometn': [
                    release : "https://nexus.shinonometn.com/repository/maven-releases/",
                    snapshot: "https://nexus.shinonometn.com/repository/maven-snapshots/",
            ]
    ]

    def publishEnvironment = project.findProperty("publish.environment") ?: "shinonometn"

    println "Repository Set: ${publishEnvironment}"

    def release = project.findProperty("maven.repo.public.release") ?: releaseRepositories[publishEnvironment]['release']
    def snapshot = project.findProperty("maven.repo.public.snapshot") ?: releaseRepositories[publishEnvironment]['snapshot']

    println "Release Repo  : ${release ?: '(unset)'}"
    println "Snapshot Repo : ${snapshot ?: '(unset)'}"

    ext {
        mavenRepoRelease = release
        mavenRepoSnapshot = snapshot
    }
}

def previewUsername(String username) {
    if(username == null) {
        println "Maven User    : (unset)"
        return
    }

    println "Maven User    : ${username.substring(0, 3)}************"
}

publishing {
    decideRepositorySet()
    previewUsername(mavenUsername)

    def releasesRepoUrl = "$mavenRepoRelease"
    def snapshotsRepoUrl = "$mavenRepoSnapshot"
    def destination = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

    println "Version       : ${version}"
    println "Publish to    : ${destination}"

    repositories {
        maven {
            url = destination

            credentials {
                username "$mavenUsername"
                password "$mavenPassword"
            }
        }
    }

    publications {
        maven(MavenPublication) {
            artifactId = "cue-parser-kt"

            from components.java

            // Reference : https://kb.novaordis.com/index.php/Gradle_Maven_Publish_Plugin
            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}